{
  "openapi": "3.0.1",
  "info": {
    "title": "AspJWTAuth",
    "version": "1.0"
  },
  "paths": {
    "/api/Api/Roles-Tenant": {
      "get": {
        "tags": [
          "Api"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              }
            }
          }
        }
      }
    },
    "/api/Api/Roles-Client": {
      "get": {
        "tags": [
          "Api"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              }
            }
          }
        }
      }
    },
    "/api/Api/Roles-SuperAdmin": {
      "get": {
        "tags": [
          "Api"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDbContext"
                }
              }
            }
          }
        }
      }
    },
    "/hello": {
      "get": {
        "tags": [
          "AspJWTAuth"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/confirmEmail": {
      "get": {
        "tags": [
          "AspJWTAuth"
        ],
        "operationId": "MapCustomIdentityApi-/confirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changedEmail",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/resendConfirmationEmail": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/forgotPassword": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/resetPassword": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/manage/2fa": {
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/manage/info": {
      "get": {
        "tags": [
          "AspJWTAuth"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "AspJWTAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Blogs": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blogs"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blogs"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blogs"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Blogs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              }
            }
          }
        }
      }
    },
    "/api/Blogs/{id}": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blogs"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Blogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Blogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Blogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BoardingHouse/Get-All-BoardingHouse": {
      "get": {
        "tags": [
          "BoardingHouse"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardingHouse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardingHouse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardingHouse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BoardingHouse/Services-Tenant": {
      "post": {
        "tags": [
          "BoardingHouse"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/BoardingHouse/{id}": {
      "get": {
        "tags": [
          "BoardingHouse"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Roles/AssignRole": {
      "post": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Roles/RemoveRole": {
      "post": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tenant/{userId}": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenant/BoardingHouse-/{id}": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenant/Tenant-Add-BoardingHouse": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "room_Number",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "room_Size",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "price_Per_Month",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "tenantid",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_Available",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenant/Tenant-Add-BoardingHouse-getemail": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "room_Number",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "room_Size",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "price_Per_Month",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_Available",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardingHouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenant/Getmail": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tenant/add": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tenant": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tenant/{serviceId}": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoardingHouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "tokenType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppDbContext": {
        "type": "object",
        "properties": {
          "database": {
            "$ref": "#/components/schemas/DatabaseFacade"
          },
          "changeTracker": {
            "$ref": "#/components/schemas/ChangeTracker"
          },
          "model": {
            "$ref": "#/components/schemas/IModel"
          },
          "contextId": {
            "$ref": "#/components/schemas/DbContextId"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityUser"
            },
            "nullable": true
          },
          "userClaims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringIdentityUserClaim"
            },
            "nullable": true
          },
          "userLogins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringIdentityUserLogin"
            },
            "nullable": true
          },
          "userTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringIdentityUserToken"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringIdentityUserRole"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityRole"
            },
            "nullable": true
          },
          "roleClaims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringIdentityRoleClaim"
            },
            "nullable": true
          },
          "blogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Blogs"
            },
            "nullable": true
          },
          "boardingHouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardingHouse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoTransactionBehavior": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Blogs": {
        "required": [
          "blogAuthor",
          "blogDescription",
          "blogTitle"
        ],
        "type": "object",
        "properties": {
          "blogId": {
            "type": "integer",
            "format": "int32"
          },
          "blogTitle": {
            "minLength": 1,
            "type": "string"
          },
          "blogDescription": {
            "minLength": 1,
            "type": "string"
          },
          "blogAuthor": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BoardingHouse": {
        "type": "object",
        "properties": {
          "boardinghouseId": {
            "type": "integer",
            "format": "int32"
          },
          "roomNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roomSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pricePerMonth": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAvailble": {
            "type": "boolean"
          },
          "descriptions": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "$ref": "#/components/schemas/IdentityUser"
          }
        },
        "additionalProperties": false
      },
      "CascadeTiming": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ChangeTracker": {
        "type": "object",
        "properties": {
          "autoDetectChangesEnabled": {
            "type": "boolean"
          },
          "lazyLoadingEnabled": {
            "type": "boolean"
          },
          "queryTrackingBehavior": {
            "$ref": "#/components/schemas/QueryTrackingBehavior"
          },
          "deleteOrphansTiming": {
            "$ref": "#/components/schemas/CascadeTiming"
          },
          "cascadeDeleteTiming": {
            "$ref": "#/components/schemas/CascadeTiming"
          },
          "context": {
            "$ref": "#/components/schemas/DbContext"
          },
          "debugView": {
            "$ref": "#/components/schemas/DebugView"
          }
        },
        "additionalProperties": false
      },
      "DatabaseFacade": {
        "type": "object",
        "properties": {
          "currentTransaction": {
            "$ref": "#/components/schemas/IDbContextTransaction"
          },
          "autoTransactionsEnabled": {
            "type": "boolean",
            "deprecated": true
          },
          "autoTransactionBehavior": {
            "$ref": "#/components/schemas/AutoTransactionBehavior"
          },
          "autoSavepointsEnabled": {
            "type": "boolean"
          },
          "providerName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbContext": {
        "type": "object",
        "properties": {
          "database": {
            "$ref": "#/components/schemas/DatabaseFacade"
          },
          "changeTracker": {
            "$ref": "#/components/schemas/ChangeTracker"
          },
          "model": {
            "$ref": "#/components/schemas/IModel"
          },
          "contextId": {
            "$ref": "#/components/schemas/DbContextId"
          }
        },
        "additionalProperties": false
      },
      "DbContextId": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "lease": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DebugView": {
        "type": "object",
        "properties": {
          "longView": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortView": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "IConstructorBindingFactory": {
        "type": "object",
        "additionalProperties": false
      },
      "IDbContextTransaction": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "supportsSavepoints": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IModel": {
        "type": "object",
        "properties": {
          "modelDependencies": {
            "$ref": "#/components/schemas/RuntimeModelDependencies"
          },
          "modelId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IParameterBindingFactories": {
        "type": "object",
        "additionalProperties": false
      },
      "ITypeMappingSource": {
        "type": "object",
        "additionalProperties": false
      },
      "IdentityRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InfoRequest": {
        "type": "object",
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryTrackingBehavior": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "resetCode": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeModelDependencies": {
        "type": "object",
        "properties": {
          "typeMappingSource": {
            "$ref": "#/components/schemas/ITypeMappingSource"
          },
          "constructorBindingFactory": {
            "$ref": "#/components/schemas/IConstructorBindingFactory"
          },
          "parameterBindingFactories": {
            "$ref": "#/components/schemas/IParameterBindingFactories"
          }
        },
        "additionalProperties": false
      },
      "StringIdentityRoleClaim": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "claimType": {
            "type": "string",
            "nullable": true
          },
          "claimValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringIdentityUserClaim": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "claimType": {
            "type": "string",
            "nullable": true
          },
          "claimValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringIdentityUserLogin": {
        "type": "object",
        "properties": {
          "loginProvider": {
            "type": "string",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          },
          "providerDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringIdentityUserRole": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringIdentityUserToken": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "loginProvider": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TwoFactorRequest": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TwoFactorResponse": {
        "type": "object",
        "properties": {
          "sharedKey": {
            "type": "string",
            "nullable": true
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}